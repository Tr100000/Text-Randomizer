plugins {
    id 'fabric-loom' version "${loom_version}"
    id 'com.diffplug.spotless' version "+"
    id 'maven-publish'
}

base.archivesName = project.archives_base_name
version = "$project.version+${minecraft_version}"

repositories {
    maven {
        name = "Xander Maven"
        url = "https://maven.isxander.dev/releases"
        content {
            includeGroup "dev.isxander"
            includeGroup "org.quiltmc.parsers"
        }
    }
    maven {
        name = "TerraformersMC Maven"
        url = "https://maven.terraformersmc.com/releases"
        content {
            includeGroup "com.terraformersmc"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${minecraft_version}+build.${yarn_version}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"

    modImplementation "com.terraformersmc:modmenu:${modmenu_version}"
    modImplementation "dev.isxander:yet-another-config-lib:${yacl_version}-fabric"
}

spotless {
    format "misc", {
        target "*.gradle", "*.properties", ".gitattributes", ".gitignore"

        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    java {
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
}

processResources {
    inputs.property 'version', version

    filesMatching('fabric.mod.json') {
        expand 'version': version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 21
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from('LICENSE') {
        rename { "${it}_${base.archivesName.get()}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        // Add repositories to publish to here.
    }
}
