plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

base {
	archivesName = project.archives_base_name
}

version = "$project.version+${minecraft_version}"
group = project.maven_group

repositories {
	maven {
		url = "https://maven.quiltmc.org/repository/release/"
		content {
			includeGroupByRegex "org.quiltmc\\S*"
		}
	}
	maven {
		url = "https://maven.isxander.dev/releases"
		content {
			includeGroup "dev.isxander.yacl"
		}
	}
	maven {
		url = "https://maven.terraformersmc.com/releases"
		content {
			includeGroup "com.terraformersmc"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings "org.quiltmc:quilt-mappings:${minecraft_version}+build.${mappings_version}:intermediary-v2"
	modImplementation "net.fabricmc:fabric-loader:${loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}+${minecraft_version}"
	modImplementation "com.terraformersmc:modmenu:${modmenu_version}"
	modImplementation "dev.isxander.yacl:yet-another-config-lib-fabric:${yacl_version}"
}

loom {
	mods {
		"text_randomizer" {
			sourceSet("main")
		}
	}
}

processResources {
	inputs.property 'version', version

	filesMatching('fabric.mod.json') {
		expand 'version': version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from('LICENSE') {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		// Add repositories to publish to here.
	}
}
